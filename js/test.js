String.prototype.replaceAll = function (search, replacement) {
    return this.replace(new RegExp(search, 'g'), replacement);
};

let field1 = `■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
■֍                        ■■■■  ■       ■         ■
■■■■■■■■■■■■■■           ■     ■■■               ■■
■    ■ ■ ■■  ■■■■   ■     ■■   ■              ■   ■
■     ■ ■       ■■■■■■■■ ■■■■    ■■               ■
■■    ■■  ■  ■               ■■    ■■   ■      ■  ■
■ ■     ■  ■■          ■■      ■■  ■■ ■  ■■■■     ■
■■ ■■  ■   ■■ ■ ■■ ■       ■ ■       ■■■   ■   ■■ ■
■ ■■  ■  ■  ■   ■     ■    ■    ■■ ■    ■■   ■    ■
■         ■       ■  ■ ■    ■■  ■ ■   ■    ■      ■
■ ■■ ■ ■  ■   ■ ■  ■     ■ ■ ■ ■  ■■         ■ ■  ■
■  ■ ■ ■■  ■        ■  ■■      ■  ■          ■    ■
■    ■■   ■ ■■ ■■    ■  ■   ■    ■    ■  ■■ ■■■ ■ ■
■■  ■ ■         ■■ ■ ■           ■      ■   ■ ■■  ■
■■■           ■■      ■     ■ ■ ■ ■■ ■  ■ ■■  ■  ■■
■■   ■       ■  ■   ■    ■■■      ■■       ■■     ■
■ ■              ■ ■             ■       ■      ■ ■
■   ■ ■ ■            ■ ■ ■  ■   ■■■  ■■■    ■ ■■  ■
■■■■■■■      ■         ■  ■               ■       ■
■            ■■  ■■  ■     ■ ■     ■■ ■ ■    ■    ■
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■`;
field1 = field1.replaceAll(type.empty, type.track);

field2 = generateField(25, 25);
for (let rowI in field2) {
    field2[rowI] = field2[rowI].map(v => v === type.empty ? type.track : v);
}

let field3 = `■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
■֍֍֍                         ■  ■       ■         ■
■■■■■■■■■■■■■■  ■      ■■■     ■■■               ■■
■    ■ ■ ■■  ■■■■   ■    ■■■   ■ ■            ■   ■
■     ■ ■       ■■■■■■■■ ■■■■    ■■               ■
■■    ■■  ■  ■               ■■■■  ■■   ■      ■  ■
■ ■     ■  ■■          ■■      ■■  ■■ ■  ■■■■     ■
■■ ■■  ■   ■■ ■ ■■ ■       ■ ■       ■■■   ■   ■■ ■
■ ■■  ■  ■  ■   ■     ■    ■    ■■ ■    ■■   ■    ■
■         ■       ■  ■ ■    ■■  ■ ■   ■    ■      ■
■ ■■ ■ ■  ■   ■ ■  ■     ■ ■ ■ ■  ■■         ■ ■  ■
■  ■ ■ ■■  ■        ■  ■■      ■  ■          ■    ■
■    ■■   ■ ■■ ■■    ■  ■   ■    ■    ■  ■■ ■■■ ■ ■
■■  ■ ■         ■■ ■ ■           ■      ■   ■ ■■  ■
■■■           ■■      ■     ■ ■ ■ ■■ ■  ■ ■■  ■  ■■
■■   ■       ■  ■   ■    ■■■      ■■       ■■     ■
■ ■              ■ ■             ■       ■      ■ ■
■   ■ ■ ■            ■ ■ ■  ■   ■■■  ■■■    ■ ■■  ■
■■■■■■■      ■         ■  ■               ■       ■
■            ■■  ■■  ■     ■ ■     ■■ ■ ■    ■    ■
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■`;